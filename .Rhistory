install.packages(c("doBy", "dplyr", "ggplot2"))
##Attaching data source for ANOVA analyses: using "New Plot Diversity Data" file which has all response variables among diff. sites and treatments
rm=(list=ls())
newPDD<-read.csv(file.choose())
attach(newPDD)
names(newPDD)
##This is the general theme for my figures
plottheme = theme(axis.title.x = element_text(size=14, face = "bold", vjust = -0.5),
axis.title.y = element_text(size=14, face = "bold", vjust = 1.5),
axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12))
library(ggplot2)
library(doBy)
library(dplyr)
##This is the general theme for my figures
plottheme = theme(axis.title.x = element_text(size=14, face = "bold", vjust = -0.5),
axis.title.y = element_text(size=14, face = "bold", vjust = 1.5),
axis.text.x = element_text(size=12),
axis.text.y = element_text(size=12))
#Difference in PrNat between positions
prnat_sum<-newPDD %>%
group_by(treat) %>%
summarise(mean_prnat= mean(prnat),
sd_prnat= sd(prnat),
n_prnat= n(),
se_prnat= sd(prnat)/sqrt(n()))
prnatPlot<-ggplot(prnat_sum, aes(treat, mean_prnat))+
geom_col(width = 0.5)+
geom_errorbar(aes(ymin=mean_prnat-se_prnat, ymax=mean_prnat+se_prnat), width= 0.2)+
geom_text(label=c("a","b"), aes(y=mean_prnat+se_prnat, x=treat),
vjust=-0.5, size=5)+
ylim(0,0.8)
prnatfigure<-prnatPlot + labs(y="Native Species/Total Richness (Mean ± SE)", x="Treatment")
prnatfigure
prnatfigure + plottheme
t.test(rnat~treat)
t.test(rint~treat)
t.test(prnat~treat)
t.test(print~treat)
rm=(list=ls())
soildata<-read.csv(file.choose())
attach(soildata)
names(soildata)
##Loading soils data
rm=(list=ls())
soildata<-read.csv(file.choose())
attach(soildata)
names(soildata)
## Creating Soil variable figures
#Creating Soil P figure
p_summary<-soiladata %>%
group_by(sitenum) %>%
summarise(mean_p= mean(p),
sd_p= sd(p),
n_p= n(),
se_p= sd(p/sqrt(n())))
pplot<-ggplot(p_summary, aes(sitenum, mean_p))+
geom_col() +
geom_errorbar(aes(ymin=mean_p-se_p, ymax=mean_p+se_p), width=0.2) +
geom_text(label=c("abc","ab","cd","bc","a","d","ab"), aes(y=mean_p+se_p, x=sitenum),
vjust=-0.5, size=5) +
ylim(0,100)
pfigure<-pplot + labs(y="Mean soil P ± SE", x="Site")
pfigure + plottheme
p_summary<-soiladata %>%
group_by(sitenum) %>%
summarise(mean_p= mean(p),
sd_p= sd(p),
n_p= n(),
se_p= sd(p/sqrt(n())))
pplot<-ggplot(p_summary, aes(sitenum, mean_p))+
geom_col() +
geom_errorbar(aes(ymin=mean_p-se_p, ymax=mean_p+se_p), width=0.2) +
geom_text(label=c("abc","ab","cd","bc","a","d","ab"), aes(y=mean_p+se_p, x=sitenum),
vjust=-0.5, size=5) +
ylim(0,100)
pfigure<-pplot + labs(y="Mean soil P ± SE", x="Site")
## Creating Soil variable figures
#Creating Soil P figure
p_summary<-soildata %>%
group_by(sitenum) %>%
summarise(mean_p= mean(p),
sd_p= sd(p),
n_p= n(),
se_p= sd(p/sqrt(n())))
pplot<-ggplot(p_summary, aes(sitenum, mean_p))+
geom_col() +
geom_errorbar(aes(ymin=mean_p-se_p, ymax=mean_p+se_p), width=0.2) +
geom_text(label=c("abc","ab","cd","bc","a","d","ab"), aes(y=mean_p+se_p, x=sitenum),
vjust=-0.5, size=5) +
ylim(0,100)
pfigure<-pplot + labs(y="Mean soil P ± SE", x="Site")
pfigure + plottheme
## Creating Soil variable figures
#Creating Soil P figure
p_summary<-soildata %>%
group_by(sitenum) %>%
summarise(mean_p= mean(p),
sd_p= sd(p),
n_p= n(),
se_p= sd(p/sqrt(n())))
pplot<-ggplot(p_summary, aes(sitenum, mean_p))+
geom_col() +
geom_errorbar(aes(ymin=mean_p-se_p, ymax=mean_p+se_p), width=0.2) +
geom_text(label=c("abc","ab","cd","bc","a","d","ab"), aes(y=mean_p+se_p, x=sitenum),
vjust=-0.5, size=5) +
ylim(0,10)
pfigure<-pplot + labs(y="Mean soil P ± SE", x="Site")
pfigure + plottheme
## Creating Soil variable figures
#Creating Soil P figure
p_summary<-soildata %>%
group_by(sitenum) %>%
summarise(mean_p= mean(p),
sd_p= sd(p),
n_p= n(),
se_p= sd(p/sqrt(n())))
pplot<-ggplot(p_summary, aes(sitenum, mean_p))+
geom_col() +
geom_errorbar(aes(ymin=mean_p-se_p, ymax=mean_p+se_p), width=0.2) +
geom_text(label=c("abc","ab","cd","bc","a","d","ab"), aes(y=mean_p+se_p, x=sitenum),
vjust=-0.5, size=5) +
ylim(0,15)
pfigure<-pplot + labs(y="Mean soil P ± SE", x="Site")
pfigure + plottheme
#Creating Soil P figure
p_summary<-soildata %>%
group_by(sitenum) %>%
summarise(mean_p= mean(p),
sd_p= sd(p),
n_p= n(),
se_p= sd(p/sqrt(n())))
pplot<-ggplot(p_summary, aes(sitenum, mean_p))+
geom_col() +
geom_errorbar(aes(ymin=mean_p-se_p, ymax=mean_p+se_p), width=0.2) +
geom_text(label=c("abc","ab","cd","bc","a","d","ab"), aes(y=mean_p+se_p, x=sitenum),
vjust=-0.5, size=5) +
ylim(0,12)
pfigure<-pplot + labs(y="Mean soil P ± SE", x="Site")
pfigure + plottheme
p_summary<-soildata %>%
group_by(sitenum) %>%
summarise(mean_p= mean(p),
sd_p= sd(p),
n_p= n(),
se_p= sd(p/sqrt(n())))
pplot<-ggplot(p_summary, aes(sitenum, mean_p))+
geom_col() +
geom_errorbar(aes(ymin=mean_p-se_p, ymax=mean_p+se_p), width=0.2) +
geom_text(label=c("abc","ab","cd","bc","a","d","ab"), aes(y=mean_p+se_p, x=sitenum),
vjust=-0.5, size=5) +
ylim(0,12)
pfigure<-pplot + labs(y="Mean soil P ± SE (mg/L)", x="Site")
pfigure + plottheme
install.packages("agricolae")
library(agricolae)
paov<-aov(p~sitenum, soildata)
pout<-HSD.test(paov, "sitenum", group=TRUE)
pout
p_summary<-soildata %>%
group_by(sitenum) %>%
summarise(mean_p= mean(p),
sd_p= sd(p),
n_p= n(),
se_p= sd(p/sqrt(n())))
pplot<-ggplot(p_summary, aes(sitenum, mean_p))+
geom_col() +
geom_errorbar(aes(ymin=mean_p-se_p, ymax=mean_p+se_p), width=0.2) +
geom_text(label=c("a","ab","ab","b","b","ab","ab"), aes(y=mean_p+se_p, x=sitenum),
vjust=-0.5, size=5) +
ylim(0,12)
pfigure<-pplot + labs(y="Mean soil P ± SE (mg/L)", x="Site")
pfigure + plottheme
##Loading soils data
rm=(list=ls())
soildata<-read.csv(file.choose())
attach(soildata)
names(soildata)
p_summary<-soildata %>%
group_by(sitenum) %>%
summarise(mean_p= mean(p),
sd_p= sd(p),
n_p= n(),
se_p= sd(p/sqrt(n())))
pplot<-ggplot(p_summary, aes(sitenum, mean_p))+
geom_col() +
geom_errorbar(aes(ymin=mean_p-se_p, ymax=mean_p+se_p), width=0.2) +
geom_text(label=c("a","ab","ab","b","b","ab","ab"), aes(y=mean_p+se_p, x=sitenum),
vjust=-0.5, size=5) +
ylim(0,12)
pfigure<-pplot + labs(y="Mean soil P ± SE (mg/L)", x="Site")
pfigure + plottheme
pt_summary<-soildata %>%
group_by(treat) %>%
summarise(mean_p= mean(p),
sd_p= sd(p),
n_p= n(),
se_p= sd(p/sqrt(n())))
ptplot<-ggplot(pt_summary, aes(treat, mean_p))+
geom_col() +
geom_errorbar(aes(ymin=mean_p-se_p, ymax=mean_p+se_p), width=0.2) +
geom_text(label=c("a","b"), aes(y=mean_p+se_p, x=treat),
vjust=-0.5, size=5) +
ylim(0,12)
pfigure<-pplot + labs(y="Mean soil P ± SE (mg/L)", x="Treatment")
pfigure + plottheme
pt_summary<-soildata %>%
group_by(treat) %>%
summarise(mean_p= mean(p),
sd_p= sd(p),
n_p= n(),
se_p= sd(p/sqrt(n())))
ptplot<-ggplot(pt_summary, aes(treat, mean_p))+
geom_col() +
geom_errorbar(aes(ymin=mean_p-se_p, ymax=mean_p+se_p), width=0.2) +
geom_text(label=c("a","b"), aes(y=mean_p+se_p, x=treat),
vjust=-0.5, size=5) +
ylim(0,12)
ptfigure<-ptplot + labs(y="Mean soil P ± SE (mg/L)", x="Treatment")
ptfigure + plottheme
pt_summary<-soildata %>%
group_by(treat) %>%
summarise(mean_p= mean(p),
sd_p= sd(p),
n_p= n(),
se_p= sd(p/sqrt(n())))
ptplot<-ggplot(pt_summary, aes(treat, mean_p))+
geom_col(width = 0.5) +
geom_errorbar(aes(ymin=mean_p-se_p, ymax=mean_p+se_p), width=0.2) +
geom_text(label=c("a","b"), aes(y=mean_p+se_p, x=treat),
vjust=-0.5, size=5) +
ylim(0,12)
ptfigure<-ptplot + labs(y="Mean soil P ± SE (mg/L)", x="Treatment")
ptfigure + plottheme
p_summary<-soildata %>%
group_by(sitenum) %>%
summarise(mean_p= mean(p),
sd_p= sd(p),
n_p= n(),
se_p= sd(p/sqrt(n())))
pplot<-ggplot(p_summary, aes(sitenum, mean_p))+
geom_col() +
geom_errorbar(aes(ymin=mean_p-se_p, ymax=mean_p+se_p), width=0.2) +
geom_text(label=c("a","ab","ab","b","b","ab","ab"), aes(y=mean_p+se_p, x=sitenum),
vjust=-0.5, size=5) +
ylim(0,12)
pfigure<-pplot + labs(y="Mean soil P ± SE (mg/L)", x="Site")
pfigure + plottheme
pfigure<-pplot + labs(y="Mean soil P ± SE (mg/kg)", x="Site")
pfigure + plottheme
amm_summary<-soildata %>%
group_by(sitenum) %>%
summarise(mean_amm= mean(amm),
sd_amm= sd(amm),
n_amm= n(),
se_amm= sd(amm/sqrt(n())))
ammplot<-ggplot(amm_summary, aes(sitenum, mean_amm))+
geom_col() +
geom_errorbar(aes(ymin=mean_amm-se_amm, ymax=mean_amm+se_amm), width=0.2) +
geom_text(label=c("a","ab","ab","b","b","ab","ab"), aes(y=mean_amm+se_amm, x=sitenum),
vjust=-0.5, size=5) +
ylim(0,12)
ammfigure<-ammplot + labs(y="Mean soil NH4 ± SE (mg/kg)", x="Site")
ammfigure + plottheme
amm_summary<-soildata %>%
group_by(sitenum) %>%
summarise(mean_amm= mean(amm),
sd_amm= sd(amm),
n_amm= n(),
se_amm= sd(amm/sqrt(n())))
ammplot<-ggplot(amm_summary, aes(sitenum, mean_amm))+
geom_col() +
geom_errorbar(aes(ymin=mean_amm-se_amm, ymax=mean_amm+se_amm), width=0.2) +
geom_text(label=c("a","ab","ab","b","b","ab","ab"), aes(y=mean_amm+se_amm, x=sitenum),
vjust=-0.5, size=5) +
ylim(0,50)
ammfigure<-ammplot + labs(y="Mean soil NH4 ± SE (mg/kg)", x="Site")
ammfigure + plottheme
amm_summary<-soildata %>%
group_by(sitenum) %>%
summarise(mean_amm= mean(amm),
sd_amm= sd(amm),
n_amm= n(),
se_amm= sd(amm/sqrt(n())))
ammplot<-ggplot(amm_summary, aes(sitenum, mean_amm))+
geom_col() +
geom_errorbar(aes(ymin=mean_amm-se_amm, ymax=mean_amm+se_amm), width=0.2) +
geom_text(label=c("a","ab","ab","b","b","ab","ab"), aes(y=mean_amm+se_amm, x=sitenum),
vjust=-0.5, size=5) +
ylim(0,100)
ammfigure<-ammplot + labs(y="Mean soil NH4 ± SE (mg/kg)", x="Site")
ammfigure + plottheme
#Site soil P figure
amm_summary<-soildata %>%
group_by(sitenum) %>%
summarise(mean_amm= mean(amm),
sd_amm= sd(amm),
n_amm= n(),
se_amm= sd(amm/sqrt(n())))
ammplot<-ggplot(amm_summary, aes(sitenum, mean_amm))+
geom_col() +
geom_errorbar(aes(ymin=mean_amm-se_amm, ymax=mean_amm+se_amm), width=0.2) +
geom_text(label=c("a","ab","ab","b","b","ab","ab"), aes(y=mean_amm+se_amm, x=sitenum),
vjust=-0.5, size=5)
ammfigure<-ammplot + labs(y="Mean soil NH4 ± SE (mg/kg)", x="Site")
ammfigure + plottheme
ammplot<-ggplot(amm_summary, aes(sitenum, mean_amm))+
geom_col() +
geom_errorbar(aes(ymin=mean_amm-se_amm, ymax=mean_amm+se_amm), width=0.2) +
geom_text(label=c("a","ab","ab","b","b","ab","ab"), aes(y=mean_amm+se_amm, x=sitenum),
vjust=-0.5, size=5) +
ylim(0,1800)
ammfigure<-ammplot + labs(y="Mean soil NH4 ± SE (mg/kg)", x="Site")
ammfigure + plottheme
ammaov<-aov(amm~sitenum, soildata)
ammout<-HSD.test(ammaov, "sitenum", group=TRUE)
ammout
ammplot<-ggplot(amm_summary, aes(sitenum, mean_amm))+
geom_col() +
geom_errorbar(aes(ymin=mean_amm-se_amm, ymax=mean_amm+se_amm), width=0.2) +
geom_text(label=c("b","b","ab","ab","a","ab","ab"), aes(y=mean_amm+se_amm, x=sitenum),
vjust=-0.5, size=5) +
ylim(0,1800)
ammfigure<-ammplot + labs(y="Mean soil NH4 ± SE (mg/kg)", x="Site")
ammfigure + plottheme
pH_summary<-soildata %>%
group_by(treat) %>%
summarise(mean_pH= mean(pH),
sd_pH= sd(pH),
n_pH= n(),
se_pH= sd(pH/sqrt(n())))
pHplot<-ggplot(pH_summary, aes(treat, mean_pH))+
geom_col(width = 0.5) +
geom_errorbar(aes(ymin=mean_pH-se_pH, ymax=mean_pH+se_pH), width=0.2) +
geom_text(label=c("a","b"), aes(y=mean_pH+se_pH, x=treat),
vjust=-0.5, size=5) +
ylim(0,8)
pHfigure<-pHplot + labs(y="Mean soil pH ± SE", x="Treatment")
pHfigure + plottheme
pH_summary<-soildata %>%
group_by(treat) %>%
summarise(mean_pH= mean(pH),
sd_pH= sd(pH),
n_pH= n(),
se_pH= sd(pH/sqrt(n())))
pHplot<-ggplot(pH_summary, aes(treat, mean_pH))+
geom_col(width = 0.5) +
geom_errorbar(aes(ymin=mean_pH-se_pH, ymax=mean_pH+se_pH), width=0.2) +
geom_text(label=c("a","b"), aes(y=mean_pH+se_pH, x=treat),
vjust=-0.5, size=5) +
ylim(0,10)
pHfigure<-pHplot + labs(y="Mean soil pH ± SE", x="Treatment")
pHfigure + plottheme
print_sum<-newPDD %>%
group_by(treat) %>%
summarise(mean_print= mean(print),
sd_print= sd(print),
n_print= n(),
se_print= sd(print)/sqrt(n()))
printPlot<-ggplot(print_sum, aes(treat, mean_print))+
geom_col(width = 0.5)+
geom_errorbar(aes(ymin=mean_print-se_print, ymax=mean_print+se_print), width= 0.2)+
geom_text(label=c("a","b"), aes(y=mean_print+se_print, x=treat),
vjust=-0.5, size=5)+
ylim(0,0.8)
printfigure<-printPlot + labs(y="Introduced Species/Total Richness (Mean ± SE)", x="Treatment")
printfigure
printfigure + plottheme
prnat_sum<-newPDD %>%
group_by(treat) %>%
summarise(mean_prnat= mean(prnat),
sd_prnat= sd(prnat),
n_prnat= n(),
se_prnat= sd(prnat)/sqrt(n()))
prnatPlot<-ggplot(prnat_sum, aes(treat, mean_prnat))+
geom_col(width = 0.5)+
geom_errorbar(aes(ymin=mean_prnat-se_prnat, ymax=mean_prnat+se_prnat), width= 0.2)+
geom_text(label=c("a","b"), aes(y=mean_prnat+se_prnat, x=treat),
vjust=-0.5, size=5)+
ylim(0,0.8)
prnatfigure<-prnatPlot + labs(y="Native Species/Total Richness (Mean ± SE)", x="Treatment")
prnatfigure
prnatfigure + plottheme
setwd("~/Git Respositories/CC-Linear-mixed-models")
mixed.WRONG <- lmer(testScore ~ bodyLength2 + (1|mountainRange) + (1|site), data = dragons)  # treats the two random effects as if they are crossed
summary(mixed.WRONG)
######################################
#                                    #
#   Mixed effects modeling in R     #
#                                    #
######################################
## authors: Gabriela K Hajduk, based on workshop developed by Liam Bailey
## contact details: gkhajduk.github.io; email: gkhajduk@gmail.com
## date: 2017-03-09
##
###---- Explore the data -----###
## load the data and have a look at it
load("dragons.RData")
head(dragons)
## Let's say we want to know how the body length affects test scores.
## Have a look at the data distribution:
hist(dragons$testScore)  # seems close to normal distribution - good!
## It is good practice to  standardise your explanatory variables before proceeding - you can use scale() to do that:
dragons$bodyLength2 <- scale(dragons$bodyLength)
## Back to our question: is test score affected by body length?
###---- Fit all data in one analysis -----###
## One way to analyse this data would be to try fitting a linear model to all our data, ignoring the sites and the mountain ranges for now.
library(lme4)
basic.lm <- lm(testScore ~ bodyLength2, data = dragons)
summary(basic.lm)
## Let's plot the data with ggplot2
library(ggplot2)
ggplot(dragons, aes(x = bodyLength, y = testScore)) +
geom_point()+
geom_smooth(method = "lm")
### Assumptions?
## Plot the residuals - the red line should be close to being flat, like the dashed grey line
plot(basic.lm, which = 1)  # not perfect, but look alright
## Have a quick look at the  qqplot too - point should ideally fall onto the diagonal dashed line
plot(basic.lm, which = 2)  # a bit off at the extremes, but that's often the case; again doesn't look too bad
## However, what about observation independence? Are our data independent?
## We collected multiple samples from eight mountain ranges
## It's perfectly plausible that the data from within each mountain range are more similar to each other than the data from different mountain ranges - they are correlated. Pseudoreplication isn't our friend.
## Have a look at the data to see if above is true
boxplot(testScore ~ mountainRange, data = dragons)  # certainly looks like something is going on here
## We could also plot it colouring points by mountain range
ggplot(dragons, aes(x = bodyLength, y = testScore, colour = mountainRange))+
geom_point(size = 2)+
theme_classic()+
theme(legend.position = "none")
## From the above plots it looks like our mountain ranges vary both in the dragon body length and in their test scores. This confirms that our observations from within each of the ranges aren't independent. We can't ignore that.
## So what do we do?
###----- Run multiple analyses -----###
## We could run many separate analyses and fit a regression for each of the mountain ranges.
## Lets have a quick look at the data split by mountain range
## We use the facet_wrap to do that
ggplot(aes(bodyLength, testScore), data = dragons) + geom_point() +
facet_wrap(~ mountainRange) +
xlab("length") + ylab("test score")
##----- Modify the model -----###
## We want to use all the data, but account for the data coming from different mountain ranges
## let's add mountain range as a fixed effect to our basic.lm
mountain.lm <- lm(testScore ~ bodyLength2 + mountainRange, data = dragons)
summary(mountain.lm)
## now body length is not significant
###----- Mixed effects models -----###
test <- 1 + 3
##----- First mixed model -----##
### model
mixed.lmer <- lmer(testScore ~ bodyLength2 + (1|mountainRange), data = dragons)
summary(mixed.lmer)
### plots
#### these plots will check the distribution of our linear mixed
#### model to check for normality
plot(mixed.lmer)  # looks alright, no patterns evident
qqnorm(resid(mixed.lmer))
qqline(resid(mixed.lmer))  # points fall nicely onto the line - good!
### summary
### variance accounted for by mountain ranges
#### mountain range variance = 339.7. Divide that by the total
#### (residual + mountain range) variance and you get ~60%
#### meaning that mountain range explains around 60% of the variance
#### "left over" after the variance explained by the fixed effect
#### body length
##-- implicit vs explicit nesting --##
head(dragons)  # we have site and mountainRange
str(dragons)  # we took samples from three sites per mountain range and eight mountain ranges in total
### str() function shows us the breakdown of each variable in
### our dataset; i.e. if it's numerical or factorial, how many
### levels of factor, also if variables have been scaled/standardized
### create new "sample" variable
#### currently the factor "site" is only implicitly nested: i.e.
#### all site "a"s are treated as the same even though there
#### are 8 different site "a"s across 8 mountain ranges.
#### we want to explicitly nest these sites within their
#### associated mountain ranges so we make it clear there are
#### actually 24 unique sample sites (3 sites x 8 mtn ranges)
dragons <- within(dragons, sample <- factor(mountainRange:site))
####this creates 24 unique sample locations: 3 sites x 8 mountain
#### ranges, instead of 3 sample locations (sites a, b, and c)
##----- Second mixed model -----##
### model
mixed.WRONG <- lmer(testScore ~ bodyLength2 + (1|mountainRange) + (1|site), data = dragons)  # treats the two random effects as if they are crossed
summary(mixed.WRONG)
mixed.lmer2 <- lmer(testScore ~ bodyLength2 + (1|mountainRange) + (1|sample), data = dragons)
summary(mixed.lmer2)
(mm_plot <- ggplot(dragons, aes(x = bodyLength, y = testScore, colour = site)) +
facet_wrap(~mountainRange, nrow=2) +   # a panel for each mountain range
geom_point(alpha = 0.5) +
theme_classic() +
geom_line(data = cbind(dragons, pred = predict(mixed.lmer2)), aes(y = pred), size = 1) +  # adding predicted line from mixed model
theme(legend.position = "none",
panel.spacing = unit(2, "lines"))  # adding space between panels
)
mixed.ranslope <- lmer(testScore ~ bodyLength2 + (1 + bodyLength2|mountainRange/site), data = dragons)
mixed.ranslope <- lmer(testScore ~ bodyLength2 + (1 + bodyLength2|mountainRange/site), data = dragons)
summary(mixed.ranslope)
(mm_plot <- ggplot(dragons, aes(x = bodyLength, y = testScore, colour = site)) +
facet_wrap(~mountainRange, nrow=2) +   # a panel for each mountain range
geom_point(alpha = 0.5) +
theme_classic() +
geom_line(data = cbind(dragons, pred = predict(mixed.ranslope)), aes(y = pred), size = 1) +  # adding predicted line from mixed model
theme(legend.position = "none",
panel.spacing = unit(2, "lines"))  # adding space between panels
)
